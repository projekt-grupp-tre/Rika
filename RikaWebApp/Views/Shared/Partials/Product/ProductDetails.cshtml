@using RikaWebApp.ViewModels
@model ProductViewModel

<div class="product-details">
    <div class="container">

        <div class="back-icon">
            <a asp-controller="ProductByCategory" asp-action="Index" class="">
                <i class="fa-regular fa-arrow-left"></i>
            </a>
        </div>
        <div class="shop-icon">
            <a href="#" >
                <i class="fa-regular fa-bag-shopping"></i>
            </a>
        </div>
        <div class="heart-icon">
            <button class="favorite-btn" data-product-id="@Model.ProductId">
                <i class="fa-regular fa-heart" id="favoriteIcon"></i>
            </button>
        </div>

        <div class="product-image">
            <div id="carouselIndicators" class="carousel slide">
                <ul class="carousel-indicators">
                    <li data-bs-target="#carouselIndicators" data-bs-slide-to="0" class="active"></li>
                    <li data-bs-target="#carouselIndicators" data-bs-slide-to="1"></li>
                    <li data-bs-target="#carouselIndicators" data-bs-slide-to="2"></li>
                </ul>
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="https://placehold.co/600x400" alt="First slide">
                    </div>
                    <div class="carousel-item">
                        <img class="d-block w-100" src="https://placehold.co/600x300" alt="Second slide">
                    </div>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselIndicators" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselIndicators" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        </div>

                 @* Testa när bilder finns i databasen  *@
        @* <div class="product-image">
            @if (Model.Images != null && Model.Images.Count > 1)
            {
                <!-- Bootstrap karusell -->
                <div id="productCarousel" class="carousel slide" data-bs-ride="carousel">

                    <ol class="carousel-indicators">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            <li data-target="#productCarousel" data-slide-to="@i" class="@(i == 0 ? "active" : "")"></li>
                        }
                    </ol>

                    <!-- karusellbilder -->
                    <div class="carousel-inner" style="margin-top: 2rem;">
                        @for (int i = 0; i < Model.Images.Count; i++)
                        {
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img class="d-block w-100" src="@Model.Images[i]" alt="Product Image" style="max-width:300px; max-height:300px;">
                            </div>
                        }
                    </div>

                    <!-- Controls                    INLINE STYLING ta bort sen -->
                    <a class="carousel-control-prev" style="width: 80px; height:80px; background-size:80px 80px; background-color: limegreen;" href="#productCarousel" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Previous</span>
                    </a>
                    <a class="carousel-control-next" style="width: 80px; height:80px; background-size:80px 80px; background-color: blue;" href="#productCarousel" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Next</span>
                    </a>
                </div>
            }
            else if (Model.Images != null && Model.Images.Any())
            {
                <!-- visa bara 1 bild om det inte finns fler -->
                <img src="@Model.Images.First()" alt="@Model.Name" style="max-width:300px; max-height:300px;" />
            }
        </div> *@


        <div class="product-detail-content">
            <div class="header">
                <div class="header-text">
                    <h1>@Model.Name</h1>
                    <p>Subtitle(?)</p>
                    <div class="rating">
                        @if (Model.Reviews != null && Model.Reviews.Any())
                        {
                            var averageRating = Model.Reviews.Average(r => r.Rating);
                            int fullStars = (int)averageRating;
                            int totalReviews = Model.Reviews.Count;

                            for (int i = 1; i <= 5; i++)
                            {
                                if (i <= fullStars)
                                {
                                    <i class="fas fa-star"></i>
                                }
                                else
                                {
                                    <i class="far fa-star"></i>
                                }
                            }
                            <a href="#" class="review-link">(@totalReviews Review)</a>
                        }
                        else
                        {
                            <p>Finns inga recensioner ännu</p>
                        }
                    </div>
                </div>

                <div class="counter">
                    <div class="input-group" style="max-width: 120px;">
                        <button class="btn btn-outline-secondary" type="button" id="decrement">-</button>
                        <input type="text" class="form-control text-center" value="1" id="quantity" readonly>
                        <button class="btn btn-outline-secondary" type="button" id="increment">+</button>
                    </div>
                    <div class="stock">
                        @if (Model.Variants != null && Model.Variants.Any())
                        {
                            var firstVariant = Model.Variants.First();
                            if (firstVariant.Stock > 0)
                            {
                                <span>Available in stock</span>
                            }
                            else
                            {
                                <span>Out of stock</span>
                            }
                        }
                        else
                        {
                            <span>Slut i lager</span>
                        }
                    </div>
                </div>

    @*             <div class="stock">
                    @Model.Variants.FirstOrDefault().Stock;
                </div> *@
            </div>

            <div class="mid-content">
                <div class="size-selection">
                    @if (Model.Variants != null && Model.Variants.Any())
                    {
                        @foreach (var variant in Model.Variants.DistinctBy(v => v.Size))
                        {
                            <button class="btn-round size-btn" data-size="@variant.Size">@variant.Size</button>
                        }
                    }
                </div>

                <div class="color-selection">
                    @if (Model.Variants != null && Model.Variants.Any())
                    {
                        @foreach (var variant in Model.Variants.DistinctBy(v => v.Color))
                        {
                            <a class="btn-round color-btn" data-color="@variant.Color"
                                    style="background-color: @variant.Color;">
                            </a>
                        }
                    }
                    else
                    {
                        <p>Inga färger tillgängliga.</p>
                    }
                </div>
            </div>

            <div class="product-description">
                <h3>Description</h3>
                <p>@Model.Description</p>
            </div>

            <div class="bottom">
                <div class="price">
                    <span>Total Price</span>
                    <p>$@Model.Variants?.FirstOrDefault()?.Price</p>
                </div>
                <div class="add-to-cart">
                    <button id="addToCartButton" class="btn-round primary">
                        <i class="fa-regular fa-bag-shopping"></i> Add to cart
                    </button>
                </div>
            </div>

        </div>
    </div>
</div>


 <script>
        document.getElementById('increment').addEventListener('click', function () {
            var quantity = document.getElementById('quantity');
            quantity.value = parseInt(quantity.value) + 1;
        });

        document.getElementById('decrement').addEventListener('click', function () {
            var quantity = document.getElementById('quantity');
            if (parseInt(quantity.value) > 1) {
                quantity.value = parseInt(quantity.value) - 1;
            }
        });


        //fyller i hjärtat
        document.querySelector('.favorite-btn').addEventListener('click', function (e) {
            e.preventDefault();

            const icon = document.getElementById('favoriteIcon');
            const productId = this.getAttribute('data-product-id');

            // växlar mellan ifylld och inte ifylld
            if (icon.classList.contains('fa-regular')) {
                icon.classList.remove('fa-regular');
                icon.classList.add('fa-solid'); 
                console.log("ifylld");
            } else {
                icon.classList.remove('fa-solid');
                icon.classList.add('fa-regular'); 
                console.log("inte ifylld");
            }
        });


        //val av storlek
     document.querySelectorAll('.size-btn').forEach(btn => {
         btn.addEventListener('click', function () {
             document.querySelectorAll('.size-btn').forEach(btn => btn.classList.remove('selected'));

             this.classList.add('selected');

             selectedSize = this.getAttribute('data-size');
         });
     });


     //val av färg
    document.querySelectorAll('.color-btn').forEach(btn => {
        const checkmark = document.createElement('span');
        checkmark.classList.add('checkmark');
        checkmark.innerHTML = '✔️'; 
        btn.appendChild(checkmark);

        btn.addEventListener('click', function () {
            document.querySelectorAll('.color-btn').forEach(btn => btn.classList.remove('selected'));

            
            this.classList.add('selected');
 
            const selectedColor = this.getAttribute('data-color');
            console.log("vald färg:", selectedColor);
        });
    });


    //lägg till i kundvagn
     document.getElementById('addToCartButton').addEventListener('click', () => {
         const productId = "@Model.ProductId";
         const selectedSize = document.querySelector('.size-btn.selected')?.getAttribute('data-size');
         const selectedColor = document.querySelector('.color-btn.selected')?.getAttribute('data-color');
         const quantity = document.getElementById('quantity').value;

         if(!selectedColor || !selectedSize) {
             alert('You have to chose a size and color');
             return;
        } else {
            // skriv ut valda alternativ
            console.log("produkt id:", productId);
            console.log("vald storlek:", selectedSize);
            console.log("vald färg:", selectedColor);
            console.log("antal:", quantity);
        }
        console.log(`Produkt id: ${productId} attribut (${selectedSize}, ${selectedColor}, ${quantity} st) har lagts till i kundvagnen.`);


     });
    </script>