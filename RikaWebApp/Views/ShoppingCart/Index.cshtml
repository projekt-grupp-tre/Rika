@using Business.Dto.OrderDtos
@using RikaWebApp.ViewModels
@model ShoppingCartViewModel

@{
    ViewData["Title"] = "My Cart";
    int bagTotal = 0;
}

<section id="shopping-cart">
    <div class="container">
        <h2>My Cart</h2>

        @if (Model.ProductResponse?.Data!.GetProductsByIds != null)
        {
            @foreach (var product in Model.ProductResponse.Data.GetProductsByIds)
            {

                <div class="cart-item-object">
                    <div class="cart-product-image">
                        <img class="cart-product" src="@(product.Images?.FirstOrDefault() ?? "")" alt="Product Image" />
                    </div>
                    <div class="cart-item-object-specifications">
                        <h4 class="cart-item-name">@product.Name</h4>
                        <p class="cart-item-description">@product.Description</p>
                        @foreach (var item in Model.CartItemDtos!)
                        {
                            @if (item.ProductId == product.ProductId.ToString())
                            {
                                <h4 class="cart-item-price" data-base-price="@product.Variants?FirstOrDefault()?.Price">$@((product.Variants.FirstOrDefault()?.Price * item.Quantity))</h4>
                                bagTotal += item.Quantity;
                            }
                        }
                    </div>

                    <div class="cart-product-quantity">
                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(false)">-</button>
                        @foreach (var item in Model.CartItemDtos!)
                        {

                            @if (item.ProductId == product.ProductId.ToString())
                            {
                                <span id="quantity">@item.Quantity</span>
                            }
                        }
                        <button class="btn btn-outline-secondary" type="button" onclick="updateQuantity(true)">+</button>
                    </div>
                </div>
            }
        }
        else
        {
            <p>Your cart is empty.</p>
        }

        <div class="cart-total-price">
            <div class="cart-specified-price">
                <h4 class="cart-item-h4">Subtotal:</h4>
                <h4 class="cart-item-h4" id="subtotal">
                    $@{
                        decimal subtotal = Model.ProductResponse?.Data!.GetProductsByIds?.Sum(p => p.Variants?.FirstOrDefault()?.Price ?? 0) ?? 0;
                    }
                    @subtotal.ToString("F2")
                </h4>
            </div>

            <div class="cart-specified-price">
                <h4 class="cart-item-h4">Shipping:</h4>
                <h4 class="cart-item-h4">$17</h4>
            </div>

            <div class="cart-specified-price">
                <h4 class="cart-item-h4">BagTotal:</h4>
                <div class="cart-bag-total">
                    <h4 class="cart-item-h4" id="bag-total">
                        <span id="item-count">(@(bagTotal)items)</span>
                        <span id="total-price">
                            @((subtotal + 17).ToString("F2"))
                        </span>
                    </h4>
                </div>
            </div>
        </div>

        <div class="cart-promo-code">
            <input type="text" id="promocode" name="promocode" placeholder="Promo Code" />
            <button class="btn" id="apply-promocode">Apply</button>
        </div>
        <p id="promocode-message"></p>

        <div class="proceed-to-checkout">
            <a asp-controller="ShoppingCart" asp-action="PaymentMethod" class="btn">Proceed to Checkout</a>
        </div>
    </div>
</section>


@section Scripts {
    <script>
        function updateQuantity(isIncrease) {
            const quantityElement = document.getElementById("quantity");
            const priceElement = document.querySelector(".cart-item-price");
            const subtotalElement = document.getElementById("subtotal");
            const itemCountElement = document.getElementById("item-count");
            const totalPriceElement = document.getElementById("total-price");

            const basePrice = parseFloat(priceElement.dataset.basePrice);
            const shippingCost = 17.0;

            let quantity = parseInt(quantityElement.innerText);

            if (isIncrease) {
                quantity++;
            } else if (quantity > 1) {
                quantity--;
            }

            quantityElement.innerText = quantity;
            const subtotal = basePrice * quantity;
            const bagTotal = subtotal + shippingCost;

            priceElement.innerText = `$${subtotal.toFixed(2)}`;
            subtotalElement.innerText = `$${subtotal.toFixed(2)}`;
            totalPriceElement.innerText = `$${bagTotal.toFixed(2)}`;

            itemCountElement.innerText = `(${quantity} Item${quantity > 1 ? 's' : ''})`;
        }
    </script>
}

